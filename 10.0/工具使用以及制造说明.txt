
patch制作 样本以放置专属文件夹

Patch1
app（app层）
bin（服务主体层）
etc（配置文件层）
lib （驱动层）
lib64 （驱动层）
overlay（系统覆盖层）
media （系统媒体服务层)
 
这里还要主意一下你所有的文件里面的权限设置 你只要设置bin文件夹里面的所有东西的权限即可 其他的可以保持默认也就是可以不用写 如果你不清楚vendor的bin权限规范 你可以看看你底包的bin 因为安卓文件的权限都是固定的 都可以参考

添加app层里面所有东西
bin层找到oem添加的所有的oem添加的服务 通常在bin bin/hw（比如MIUI移植的话 搜索关键字xiaomi flyme移植搜索关键字 meizu 总之靠你自行找到所有oem的服务）
（小提示：一个服务完整依赖分别在bin etc/init lib lib64 system服务的话部分在framework也有依赖）
etc层 添加bin服务的指定启用服务的rc 位置etc/init 
添加etc所有的media_profiles开头的xml文件 和 oem添加的定制xml文件（比如 xxx.MIUI.xxx.xml）
删掉你底包vendor/etc/permissions的qti_permissions.xml文件
添加permissions文件夹里面oem定制的权限文件（比如vendor.xxx.miui.xxx.xml）
以及你没见过的或者你不太确定的 oem多余的所有你感觉有用的东西
lib/lib64层 添加所有bin的oem服务所要依赖的驱动 通常以对应bin服务的名字命名 以及自带的音频驱动文件夹soundfx当然你也可以不添加 不过添加了可以防止一堆系统开机后音频出现问题
添加media overlay 文件夹里的所有东西 刷入的时候记得先删除你底包的vendor的这些文件夹 因为不干净的话可能导致一堆问题而不开机 所以推荐纯净刷入
此Patch1是SGSI的精髓所在 一个Patch1做不做得好直接影响到此SGSI的稳定性和系统启动 因此需要自行根据log的实际情况来变化

Patch2 为oem厂商服务的对应的se安全下文注册 注意与Ptach1 bin下添加的oem服务的se上下文保持一致 修改文件为 vendor_hwservice_contexts

Patch3 为boot补丁 其作用是为底包的boot打开宽容权限 用于开机

ps:凡事以log为主自行调试修改 并不是死板就行
